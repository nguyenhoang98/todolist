{"version":3,"sources":["Component/Header/Header.js","Component/Button/Button.js","Component/TaskForm/TaskForm.js","Component/TaskItem/TaskItem.js","Component/TaskList/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","Button","handleOpenForm","onClick","TaskForm","useState","id","title","status","description","dataForm","setDataForm","addData","handleCloseForm","edit","handleOnchange","e","target","name","value","newDataForm","handleOnResetForm","useEffect","aria-hidden","onSubmit","preventDefault","type","onChange","placeholder","required","TaskItem","data","index","handleOnDelData","handleOnEditForm","TaskList","datas","map","App","localStorage","getItem","JSON","parse","setDatas","isOpenForm","setIsOpenForm","setEdit","s4","Math","floor","random","toString","substring","OpenForm","closeForm","setItem","stringify","findIndex","newDatas","splice","toast","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d5bacb5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nHeader.propTypes = {};\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2>Ứng Dụng Quản Lí Công Việc</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nButton.propTypes = {};\r\n\r\nfunction Button(props) {\r\n  const { handleOpenForm } = props;\r\n  return (\r\n    <button className=\"btn btn-show-form\" onClick={handleOpenForm}>\r\n      Thêm Công Việc\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./TaskForm.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTaskForm.propTypes = {};\r\n\r\nfunction TaskForm(props) {\r\n  const [dataForm, setDataForm] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    status: true,\r\n    description: \"\",\r\n  });\r\n  const { addData, handleCloseForm, edit } = props;\r\n  useEffect(() => {\r\n    setDataForm({\r\n      id: edit.id,\r\n      title: edit.title,\r\n      status: edit.status,\r\n      description: edit.description,\r\n    });\r\n  }, [edit]);\r\n\r\n  function handleOnchange(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value =\r\n      target.value === \"true\"\r\n        ? true\r\n        : target.value === \"false\"\r\n        ? false\r\n        : target.value;\r\n    const newDataForm = { ...dataForm };\r\n    newDataForm[name] = value;\r\n    setDataForm(newDataForm);\r\n  }\r\n  function handleOnsubmit(e) {\r\n    e.preventDefault();\r\n    addData(dataForm);\r\n    handleOnResetForm();\r\n  }\r\n  function handleOnResetForm() {\r\n    setDataForm({\r\n      id: \"\",\r\n      title: \"\",\r\n      status: true,\r\n      description: \"\",\r\n    });\r\n  }\r\n  const { id, title, status, description } = dataForm;\r\n  return (\r\n    <div className=\"taskform\">\r\n      <div className=\"taskform__title\">\r\n        {id ? \"Cập Nhật Công việc\" : \"Thêm Công Việc\"}\r\n      </div>\r\n      <span className=\"taskform__close\" onClick={handleCloseForm}>\r\n        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n      </span>\r\n      <form onSubmit={handleOnsubmit}>\r\n        <div className=\"group-form\">\r\n          <label className=\"group-form__title\"> Tên Công việc </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"group-form__input\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleOnchange}\r\n            placeholder=\"Tên Công việc\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"group-form\">\r\n          <label className=\"group-form__title\"> Trạng Thái Công việc </label>\r\n          <select\r\n            name=\"status\"\r\n            value={status}\r\n            onChange={handleOnchange}\r\n            className=\"group-form__input\"\r\n          >\r\n            <option value={true}>Xong</option>\r\n            <option value={false}>Chưa Xong</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"group-form\">\r\n          <label className=\"group-form__title\"> Ghi chú </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"group-form__input\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={handleOnchange}\r\n            placeholder=\"Ghi Chú Công Việc\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"group-form\">\r\n          <button type=\"submit\" className=\"btn btn-submit\">\r\n            Thêm nhân viên\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-reset-form\"\r\n            onClick={handleOnResetForm}\r\n          >\r\n            Làm mới{\" \"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport \"./TaskItem.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTaskItem.propTypes = {};\r\n\r\nfunction TaskItem(props) {\r\n  const { data, index, handleOnDelData, handleOnEditForm } = props;\r\n  return (\r\n    <tr>\r\n      <td>{index + 1}</td>\r\n      <td> {data.title} </td>\r\n      <td>\r\n        <span className={data.status ? \"blue\" : \"red\"}>\r\n          {data.status ? \"Hoàn Thành rồi\" : \"Chưa Hoàn Thành nhé\"}\r\n        </span>\r\n      </td>\r\n      <td> {data.description} </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-update\"\r\n          onClick={() => handleOnEditForm(data)}\r\n        >\r\n          <i className=\"fa fa-pencil-square\" aria-hidden=\"true\"></i>\r\n          &nbsp; Cập nhật\r\n        </button>\r\n        <button className=\"btn btn-del\" onClick={() => handleOnDelData(data)}>\r\n          <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n          &nbsp; Xóa\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport \"./TaskList.scss\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nTaskList.propTypes = {};\r\n\r\nfunction TaskList(props) {\r\n  const { datas, handleOnDelData, handleOnEditForm } = props;\r\n  return (\r\n    <div className=\"tasklist\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>STT</th>\r\n            <th>Tên Công Việc</th>\r\n            <th>Trạng Thái</th>\r\n            <th>Ghi Chú</th>\r\n            <th>Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {datas.map((value, index) => {\r\n            return (\r\n              <TaskItem\r\n                data={value}\r\n                key={index}\r\n                index={index}\r\n                handleOnDelData={handleOnDelData}\r\n                handleOnEditForm={handleOnEditForm}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Header from \"./Component/Header/Header\";\nimport Button from \"./Component/Button/Button\";\nimport TaskForm from \"./Component/TaskForm/TaskForm\";\nimport TaskList from \"./Component/TaskList/TaskList\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction App(props) {\n  const [datas, setDatas] = useState(() => {\n    if (localStorage.getItem(\"todolist\")) {\n      return JSON.parse(localStorage.getItem(\"todolist\"));\n    } else {\n      return [];\n    }\n  });\n  const [isOpenForm, setIsOpenForm] = useState(false);\n  const [edit, setEdit] = useState({\n    id: \"\",\n    title: \"\",\n    status: true,\n    description: \"\",\n  });\n  useEffect(() => {\n    localStorage.setItem(\"todolist\", JSON.stringify(datas));\n  }, [datas]);\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  function createID() {\n    return s4() + \"-\" + s4() + s4() + \"-\" + s4() + \"-\" + s4();\n  }\n  function addData(data) {\n    if (data.id) {\n      const index = datas.findIndex((value) => {\n        return value.id === data.id;\n      });\n      const newDatas = [...datas];\n      newDatas[index] = data;\n      setDatas(newDatas);\n      toast(\"Cập Nhật Công Việc Thành Công :)\");\n    } else {\n      data.id = createID();\n      const newDatas = [...datas];\n      newDatas.push(data);\n      setDatas(newDatas);\n      toast(\"Thêm Công Việc thành công :)\");\n    }\n    closeForm();\n  }\n  function OpenForm() {\n    setIsOpenForm(true);\n  }\n  function closeForm() {\n    setIsOpenForm(false);\n    resetEdit();\n  }\n  function OnDelData(data) {\n    const index = datas.findIndex((value) => {\n      return value.id === data.id;\n    });\n    const newDatas = [...datas];\n    newDatas.splice(index, 1);\n    setDatas(newDatas);\n    toast(\"Xóa Công Việc Thành Công thành công :)\");\n  }\n  function EditForm(data) {\n    setEdit({\n      id: data.id,\n      title: data.title,\n      status: data.status,\n      description: data.description,\n    });\n    OpenForm();\n  }\n  function resetEdit() {\n    setEdit({\n      id: \"\",\n      title: \"\",\n      status: true,\n      description: \"\",\n    });\n  }\n  return (\n    <div className=\"app\">\n      <Header />\n      <TaskList\n        datas={datas}\n        handleOnDelData={OnDelData}\n        handleOnEditForm={EditForm}\n      />\n      {isOpenForm && (\n        <TaskForm addData={addData} handleCloseForm={closeForm} edit={edit} />\n      )}\n      <Button handleOpenForm={OpenForm} />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}